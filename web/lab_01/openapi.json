{
  "openapi": "3.0.2",
  "info": {
    "title": "Система прогнозирования цен на товары в магазинах",
    "version": "1.0.0"
  },
  "paths": {
    "/shops": {
      "get": {
        "tags": [
          "shops"
        ],
        "summary": "Gets all shops",
        "description": "Gets all shops",
        "responses": {
          "200": {
            "description": "Gets an array of shops",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "shops"
        ],
        "summary": "Update an existing shop",
        "description": "Update an existing shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "shops"
        ],
        "summary": "Create new shop",
        "description": "Create new shop",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{shopId}": {
      "get": {
        "tags": [
          "shops"
        ],
        "summary": "Get shop by shopId",
        "description": "get shop by shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      },
      "post": {
        "tags": [
          "shops"
        ],
        "summary": "Update shop with new data",
        "description": "Update shop with new data",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "new name of shop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "new description of shop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "shops"
        ],
        "summary": "Delete shop with shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid shop value"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Gets all products",
        "description": "Gets all products",
        "responses": {
          "200": {
            "description": "Gets an array of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update an existing product",
        "description": "Update an existing product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create new product",
        "description": "Create new product",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{shopId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get products by shopId",
        "description": "Get products by shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get product with productId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Shop": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Name": {
            "type": "string",
            "example": "ShopMine"
          },
          "Desctription": {
            "type": "string",
            "example": "Food shop"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Name": {
            "type": "string",
            "example": "Milk"
          },
          "ProductType": {
            "type": "string",
            "example": "Milk products"
          },
          "Cost": {
            "type": "integer",
            "format": "int32",
            "example": 65
          }
        }
      },
      "SaleReceipt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Fio": {
            "type": "string",
            "example": "Ivanov Ivan Ivanovich"
          },
          "DateOfPurchase": {
            "type": "string",
            "format": "date-time",
            "example": "1.01.1901"
          },
          "ShopId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "SummaryCost": {
            "type": "integer",
            "format": "int32",
            "example": 1000
          }
        }
      },
      "SaleReceiptPosition": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "SaleReceiptId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Availability": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ShopId": {
            "type": "integer",
            "format": "int32"
          },
          "ProductId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CostStory": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Cost": {
            "type": "integer",
            "format": "int32"
          },
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Cost": {
        "type": "object",
        "properties": {
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "CostValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}