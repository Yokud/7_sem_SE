{
  "openapi": "3.0.2",
  "info": {
    "title": "Система прогнозирования цен на товары в магазинах",
    "version": "1.0.0"
  },
  "paths": {
    "/shops": {
      "get": {
        "tags": [
          "shops"
        ],
        "summary": "Gets all shops",
        "description": "Gets all shops",
        "responses": {
          "200": {
            "description": "Gets an array of shops",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "shops"
        ],
        "summary": "Create new shop",
        "description": "Create new shop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shops/{shopId}": {
      "get": {
        "tags": [
          "shops"
        ],
        "summary": "Get shop by shopId",
        "description": "get shop by shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      },
      "put": {
        "tags": [
          "shops"
        ],
        "summary": "Update shop with new data",
        "description": "Update shop with new data",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "new name of shop",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "new description of shop",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Shop"
                  }
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "shops"
        ],
        "summary": "Delete shop with shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid shop value"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Gets all products",
        "description": "Gets all products",
        "responses": {
          "200": {
            "description": "Gets an array of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create new product",
        "description": "Create new product",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/findByShop": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get products by shopId",
        "description": "Get products by shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    },
    "/products/{shopId}/{productId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Add product by productId to shop by shopId",
        "description": "Add product by productId to shop by shopId",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop or product not found"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get product with productId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update product with productId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of product",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productType",
            "in": "query",
            "description": "Product type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "Cost of product in selected shop",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete product with productId",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/salereceipts": {
      "get": {
        "tags": [
          "salereceipts"
        ],
        "summary": "get all sale receipts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceipt"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salereceipts"
        ],
        "summary": "create new sale receipt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleReceipt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceipt"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/salereceipts/findByShop": {
      "get": {
        "tags": [
          "salereceipts"
        ],
        "summary": "get all sale receipts from selected shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "query",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceipt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Shop not found"
          }
        }
      }
    },
    "/salereceipts/{salereceiptId}": {
      "get": {
        "tags": [
          "salereceipts"
        ],
        "summary": "get sale receipt by ID",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleReceipt"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      },
      "put": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Update sale receipt with salereceiptID",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "FIO",
            "in": "query",
            "description": "FIO of sale receipt",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DateOPurchase",
            "in": "query",
            "description": "Date of purchase of sale receipt",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleReceipt"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      },
      "delete": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Delete sale receipt with salereceiptID",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      }
    },
    "/salereceipts/{salereceiptId}/positions": {
      "get": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Get positions of sale receipt",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceiptPosition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      },
      "post": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Create position in sale receipt",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleReceiptPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceiptPosition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      }
    },
    "/salereceipts/{salereceiptId}/positions/{positionId}": {
      "put": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Create position in sale receipt",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "positionId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SaleReceiptPosition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt or position not found"
          }
        }
      },
      "delete": {
        "tags": [
          "salereceipts"
        ],
        "summary": "Create position in sale receipt",
        "parameters": [
          {
            "name": "salereceiptId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "positionId",
            "in": "path",
            "description": "ID of sale receipt",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Sale receipt not found"
          }
        }
      }
    },
    "/coststories": {
      "get": {
        "tags": [
          "coststories"
        ],
        "summary": "Get all cost stories",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostStory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "coststories"
        ],
        "summary": "Create new cost story unit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostStory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostStory"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coststories/{coststoryId}": {
      "get": {
        "tags": [
          "coststories"
        ],
        "summary": "Get cost story unit by ID",
        "parameters": [
          {
            "name": "coststoryId",
            "in": "path",
            "description": "ID of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostStory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cost story not found"
          }
        }
      },
      "put": {
        "tags": [
          "coststories"
        ],
        "summary": "Update cost story unit by ID",
        "parameters": [
          {
            "name": "coststoryId",
            "in": "path",
            "description": "ID of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "year of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "month of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cost",
            "in": "query",
            "description": "cost of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostStory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cost story not found"
          }
        }
      },
      "delete": {
        "tags": [
          "coststories"
        ],
        "summary": "Delete cost story unit by ID",
        "parameters": [
          {
            "name": "coststoryId",
            "in": "path",
            "description": "ID of cost story",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Cost story not found"
          }
        }
      }
    },
    "/coststory/{shopId}/{productId}": {
      "get": {
        "tags": [
          "coststories"
        ],
        "summary": "Get full cost story of product in the shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product in the shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Full cost story not found"
          }
        }
      }
    },
    "/coststory/{shopId}/{productId}/trendline": {
      "get": {
        "tags": [
          "coststories"
        ],
        "summary": "Get trend line of full cost story of product in the shop",
        "parameters": [
          {
            "name": "shopId",
            "in": "path",
            "description": "ID of shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product in the shop",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Full cost story not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Shop": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Name": {
            "type": "string",
            "example": "ShopMine"
          },
          "Description": {
            "type": "string",
            "example": "Food shop"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Name": {
            "type": "string",
            "example": "Milk"
          },
          "ProductType": {
            "type": "string",
            "example": "Milk products"
          },
          "Cost": {
            "type": "integer",
            "format": "int32",
            "example": 65
          }
        }
      },
      "SaleReceipt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "Fio": {
            "type": "string",
            "example": "Ivanov Ivan Ivanovich"
          },
          "DateOfPurchase": {
            "type": "string",
            "format": "date-time",
            "example": "1.01.1901"
          },
          "ShopId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "SummaryCost": {
            "type": "integer",
            "format": "int32",
            "example": 1000
          }
        }
      },
      "SaleReceiptPosition": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "SaleReceiptId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Availability": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "ShopId": {
            "type": "integer",
            "format": "int32"
          },
          "ProductId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CostStory": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int32"
          },
          "Year": {
            "type": "integer",
            "format": "int32"
          },
          "Month": {
            "type": "integer",
            "format": "int32"
          },
          "Cost": {
            "type": "integer",
            "format": "int32"
          },
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Cost": {
        "type": "object",
        "properties": {
          "AvailabilityId": {
            "type": "integer",
            "format": "int32"
          },
          "CostValue": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}